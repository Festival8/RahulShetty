# root, console and file are 3 different types of logging
# root - is by default
# console - is format of logging into console
# file - which logs will be added to the file
# just FYI root,console,file, consoleHandler, fileHandler - are just our variables. Any names can be used

# *************  IN THIS SECTION WE SPECIFIES NAMES OF OUR VARIABLES FOR OUR LOGS ****************
[loggers]
keys=root,console,file

# here in handlers can be specified the level of logging in each type of logging
[handlers]
keys=consoleHandler,fileHandler

# here in formatters can be specified the format of our shown logs.
[formatters]
keys=commonFormatter

# *************  IN THIS SECTION WE SPECIFIES LEVEL OF LOGGING,
# WHICH HANDLERS ARE GOING TO PARTICIPATE OF OUR VARIABLES FOR OUR LOGS ****************
# Here the description of format which is used. And which level will be used for each log type
# Example [logger_{name_of_variable}] example logger_root
[logger_root]
level=DEBUG
handlers=consoleHandler,fileHandler

[logger_console]
level=INFO
handlers=consoleHandler
qualname=console
propagate=0

[logger_file]
level=DEBUG
handlers=fileHandler
qualname=file
propagate=0

# here we specify description for format of our logs for each log type
# StreamHandler is built-in class which helps to generate logs into console with appropriate format
[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=commonFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=FileHandler
level=DEBUG
formatter=commonFormatter
args=('log.txt','w')

# here the format rules are described
# asctime - is a date/time of the log
[formatter_commonFormatter]
format=[%(asctime)s][%(levelname)s][%(name)s] %(message)s